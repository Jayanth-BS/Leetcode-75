/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//https://leetcode.com/problems/add-one-row-to-tree/?envType=daily-question&envId=2024-04-16


class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth){
       if (!root) { // Handle empty tree
    return new TreeNode(val);
  }
       if(depth == 1){
            TreeNode* newT = new TreeNode(val);
            newT->left = root;
            return newT;
       }

        queue<TreeNode*> q;
        q.push(root);
        int count =1;

        while(count < depth-1){
            int s = q.size();
            for(int i=0;i<s;i++){
            TreeNode* cur = q.front();
            q.pop();

             if(cur->left)
                    q.push(cur->left);

             if(cur->right)
                    q.push(cur->right);
            }
            count++;
        }
        while(!q.empty()){
            TreeNode *cur = q.front();
            q.pop();
            
                TreeNode* leftc = new TreeNode(val);
                leftc->left = cur->left;
                cur->left = leftc;
            
                TreeNode* rightc = new TreeNode(val);
                rightc->right = cur->right;
                cur->right = rightc;
            
        }
        return root;
    }
};
